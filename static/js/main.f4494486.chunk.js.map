{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","api.ts","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Type","actions","todo","type","set","payload","remove","currentTodoReducer","state","action","addQuery","query","addStatus","status","clearQuery","initialParams","filterReducer","todos","addTodos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","Loader","className","TodoList","useState","isError","setIsError","isLoading","setIsLoading","dispatch","useEffect","todosList","todosAction","catch","finally","visibleTodos","useMemo","newTodos","title","toLowerCase","includes","active","completed","all","length","map","id","classNames","onClick","currentTodoAction","OPTIONS","TodoFilter","onSubmit","event","preventDefault","onChange","target","value","option","placeholder","style","pointerEvents","TodoModal","user","setUser","userId","href","email","name","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4494486.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\nenum Type {\n  set = 'currentTodo/SET',\n  remove = 'currentTodo/REMOVE',\n}\n\ntype RemoveTodoAction = { type: Type.remove };\n\ntype SetTodoAction = {\n  type: Type.set;\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: Type.remove });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: Type.set,\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nlet stateTodo = null;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case Type.set:\n      stateTodo = action.payload;\n\n      return stateTodo;\n\n    case Type.remove:\n      stateTodo = null;\n\n      return stateTodo;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\nenum Type {\n  query = 'add/query',\n  clearQuery = 'add/clear',\n  status = 'add/status',\n}\n\ntype QueryAction = { type: Type.query, payload: string };\ntype StatusAction = { type: Type.status, payload: string };\ntype ClearAction = { type: Type.clearQuery };\n\ntype Actions = QueryAction | StatusAction | ClearAction;\n\nconst addQuery = (query: string) => ({ type: Type.query, payload: query });\nconst addStatus = (status: Status) => ({ type: Type.status, payload: status });\nconst clearQuery = () => ({ addQuery, addStatus, clearQuery });\n\nexport const actions = { addQuery, addStatus, clearQuery };\n\ntype Param = {\n  query: string,\n  status: Status,\n};\n\nconst initialParams: Param = { query: '', status: 'all' };\n\nconst filterReducer = (\n  state: Param = initialParams,\n  action: Actions,\n): Param => {\n  switch (action.type) {\n    case Type.query:\n      return { ...state, query: action.payload };\n    case Type.status:\n      return { ...state, status: action.payload as Status };\n    case Type.clearQuery:\n      return { ...state, query: '' };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nenum Type {\n  addTodos = 'todos/ADD',\n}\ntype AddTodos = { type: Type.addTodos, payload: Todo[] };\n\nconst addTodos = (todos: Todo[]): AddTodos => (\n  { type: Type.addTodos, payload: todos }\n);\n\nexport const actions = { addTodos };\n\nconst todosReducer = (todos: Todo[] = [], action: AddTodos): Todo[] => {\n  if (action.type === Type.addTodos) {\n    return action.payload;\n  }\n\n  return todos;\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { getTodos } from '../../api';\nimport { actions as todosAction } from '../../features/todos';\nimport { actions as currentTodoAction } from '../../features/currentTodo';\nimport { Loader } from '../Loader';\n\nenum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsError(false);\n    setIsLoading(true);\n\n    getTodos()\n      .then((todosList) => dispatch(todosAction.addTodos(todosList)))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    const newTodos = query\n      ? [...todos].filter(todo => todo.title.toLowerCase().includes(query))\n      : [...todos];\n\n    switch (status) {\n      case Status.active:\n        return newTodos.filter(todo => !todo.completed);\n\n      case Status.completed:\n        return newTodos.filter(todo => todo.completed);\n\n      case Status.all:\n        return newTodos;\n\n      default:\n        return newTodos;\n    }\n  }, [query, status, todos]);\n\n  return (\n    <>\n      {!isLoading && !isError && visibleTodos.length === 0 && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {isLoading && !isError && <Loader />}\n\n      {!isLoading && !isError && visibleTodos.length > 0 && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {visibleTodos.map(todo => {\n              const { id, completed, title } = todo;\n\n              return (\n                <tr key={id} data-cy=\"todo\">\n                  <td className=\"is-vcentered\">{id}</td>\n                  <td className=\"is-vcentered\">\n                    {completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n\n                  <td className=\"is-vcentered is-expanded\">\n                    <p\n                      className={classNames(\n                        { 'has-text-danger': !completed },\n                        { 'has-text-success': completed },\n                      )}\n                    >\n                      {title}\n                    </p>\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => dispatch(currentTodoAction.setTodo(todo))}\n                    >\n                      <span className=\"icon\">\n                        <i className={id === currentTodo?.id\n                          ? 'far fa-eye-slash'\n                          : 'far fa-eye'}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nconst OPTIONS = ['All', 'Active', 'Completed'];\n\nexport const TodoFilter: React.FC = () => {\n  const { query } = useAppSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(actions.addStatus(event.target.value as Status));\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actions.addQuery(event.target.value.toLowerCase()));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelect}\n          >\n            {OPTIONS.map(option => (\n              <option\n                value={option.toLowerCase()}\n                key={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          placeholder=\"Search...\"\n          onChange={handleInput}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"clear input\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(actions.clearQuery())}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useDispatch();\n  const [user, setUser] = useState<User | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsError(false);\n    setIsLoading(true);\n\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(setUser)\n        .catch(() => setIsError(true))\n        .finally(() => setIsLoading(false));\n    }\n  }, [currentTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && !isError && <Loader />}\n      {!isLoading && !isError && user && currentTodo && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n            <button\n              type=\"button\"\n              aria-label=\"close\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(actions.removeTodo())}\n            />\n          </header>\n          <div className=\"modal-card-body\">\n            <p\n              className=\"block\"\n              data-cy=\"modal-title\"\n            >\n              {currentTodo.title}\n            </p>\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!currentTodo.completed && (\n                <strong className=\"has-text-danger\">\n                  Planned\n                </strong>\n              )}\n              {currentTodo.completed && (\n                <strong className=\"has-text-success\">\n                  Done\n                </strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\nimport './App.scss';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}